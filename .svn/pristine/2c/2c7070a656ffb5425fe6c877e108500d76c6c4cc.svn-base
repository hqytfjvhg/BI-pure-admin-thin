<script setup lang="js">
import { isAllEmpty } from "@pureadmin/utils";
import { ref, nextTick, computed, watch } from "vue";
import { useNav } from "@/layout/hooks/useNav";
import LaySearch from "../lay-search/index.vue";
import LayNotice from "../lay-notice/index.vue";
import { usePermissionStoreHook } from "@/store/modules/permission";
import LaySidebarItem from "../lay-sidebar/components/SidebarItem.vue";
import LaySidebarFullScreen from "../lay-sidebar/components/SidebarFullScreen.vue";
import { useTranslationLang } from "../../hooks/useTranslationLang";
import {
  ascending,
  filterTree,
  getParentPaths,
  findRouteByPath
} from "@/router/utils";
import Router from "@/router/index";
import LaySidebarRefresh from "../lay-sidebar/components/SidebarRefresh.vue";
// import { storageLocal } from "@pureadmin/utils";

import LogoutCircleRLine from "@iconify-icons/ri/logout-circle-r-line";
import Setting from "@iconify-icons/ri/settings-3-line";
import GlobalizationIcon from "@/assets/svg/globalization.svg?component";
import Check from "@iconify-icons/ep/check";

import { reactive } from "vue";
import Dialog from "@/components/dialog/changePass.vue";

const menuRef = ref();

const { t, route, locale, translationCh, translationEn, translationHk } =
  useTranslationLang(menuRef);
const {
  title,
  logout,
  onPanel,
  getLogo,
  username,
  userAvatar,
  backTopMenu,
  avatarsStyle,
  getDropdownItemStyle,
  getDropdownItemClass,
  pureApp
} = useNav();
// const username=storageLocal().getItem("user-info")?.userName
// 切换语言
const changeLanguage = type => {
  type == "zh"
    ? translationCh()
    : type == "hk"
      ? translationHk()
      : translationEn();
  sessionStorage.setItem("languageShow", type);
};
const defaultActive = computed(() =>
  !isAllEmpty(route.meta?.activePath) ? route.meta.activePath : route.path
);
const subMenuData = ref([]);
const menuData = computed(() => {
  // usePermissionStoreHook().wholeMenus是前后端的路由合并，本项目仅需前端静态路由,所以在动态路由传参是空数组
  console.log(usePermissionStoreHook().constantMenus, Router.options);
  return filterTree(ascending(usePermissionStoreHook().constantMenus));
});

nextTick(() => {
  menuRef.value?.handleResize();
});

const dialog = reactive({
  show: false
});
const changePass = () => {
  dialog.show = true;
};
</script>

<template>
  <!-- v-loading="usePermissionStoreHook().wholeMenus.length === 0" -->
  <div class="horizontal-header">
    <div class="horizontal-header-left" @click="backTopMenu">
      <img :src="getLogo()" alt="logo" />
      <span>{{ title }}</span>
    </div>
    <el-menu
      ref="menuRef"
      mode="horizontal"
      popper-class="pure-scrollbar"
      class="horizontal-header-menu"
      :default-active="defaultActive"
    >
      <!-- TODO -->
      <LaySidebarItem
        v-for="route in menuData"
        :key="route.path"
        :item="route"
        :base-path="route.path"
      />
    </el-menu>
    <div class="horizontal-header-right">
      <!-- 菜单搜索 -->
      <!-- <LaySearch id="header-search" /> -->
      <!-- 刷新 -->
      <LaySidebarRefresh id="header-refresh" />
      <!-- 国际化 -->
      <el-dropdown id="header-translation" trigger="click">
        <GlobalizationIcon
          class="navbar-bg-hover w-[40px] h-[48px] p-[11px] cursor-pointer outline-none"
        />
        <template #dropdown>
          <el-dropdown-menu class="translation">
            <el-dropdown-item
              :style="getDropdownItemStyle(locale, 'zh')"
              :class="['dark:!text-white', getDropdownItemClass(locale, 'zh')]"
              @click="changeLanguage('zh')"
            >
              <span v-show="locale === 'zh'" class="check-zh">
                <IconifyIconOffline :icon="Check" />
              </span>
              简体中文
            </el-dropdown-item>
            <el-dropdown-item
              :style="getDropdownItemStyle(locale, 'hk')"
              :class="['dark:!text-white', getDropdownItemClass(locale, 'hk')]"
              @click="changeLanguage('hk')"
            >
              <span v-show="locale === 'hk'" class="check-en">
                <IconifyIconOffline :icon="Check" />
              </span>
              繁體中文
            </el-dropdown-item>
            <el-dropdown-item
              :style="getDropdownItemStyle(locale, 'en')"
              :class="['dark:!text-white', getDropdownItemClass(locale, 'en')]"
              @click="changeLanguage('en')"
            >
              <span v-show="locale === 'en'" class="check-en">
                <IconifyIconOffline :icon="Check" />
              </span>
              English
            </el-dropdown-item>
          </el-dropdown-menu>
        </template>
      </el-dropdown>
      <!-- 全屏 -->
      <!-- <LaySidebarFullScreen id="full-screen" /> -->
      <!-- 消息通知 -->
      <!-- <LayNotice id="header-notice" /> -->
      <!-- 退出登录 -->
      <el-dropdown trigger="click">
        <span class="el-dropdown-link navbar-bg-hover">
          <img :src="userAvatar" :style="avatarsStyle" />
          <p v-if="username" class="dark:text-white">{{ username }}</p>
        </span>
        <template #dropdown>
          <el-dropdown-menu class="logout">
            <el-dropdown-item @click="changePass">
              <IconifyIconOffline :icon="Check" style="margin: 5px" />
              {{ t("status.pass") }}
            </el-dropdown-item>
            <el-dropdown-item @click="logout">
              <IconifyIconOffline
                :icon="LogoutCircleRLine"
                style="margin: 5px"
              />
              {{ t("status.logout") }}
            </el-dropdown-item>
          </el-dropdown-menu>
        </template>
      </el-dropdown>
      <span
        class="set-icon navbar-bg-hover"
        title="打开系统配置"
        @click="onPanel"
      >
        <IconifyIconOffline :icon="Setting" />
      </span>
    </div>

    <!-- 修改密码弹窗 -->
    <Dialog :dialog="dialog" v-if="dialog.show" />
  </div>
</template>

<style lang="scss" scoped>
:deep(.el-loading-mask) {
  opacity: 0.45;
}

.translation {
  ::v-deep(.el-dropdown-menu__item) {
    padding: 5px 40px;
  }

  .check-zh {
    position: absolute;
    left: 20px;
  }

  .check-en {
    position: absolute;
    left: 20px;
  }
}

.logout {
  width: 120px;

  ::v-deep(.el-dropdown-menu__item) {
    display: inline-flex;
    flex-wrap: wrap;
    min-width: 100%;
  }
}
</style>
