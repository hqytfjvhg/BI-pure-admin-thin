<template>
  <div>
    <Table
      v-model:formData="formData"
      :page="page"
      :pageSizes="pageSizes"
      :showIndex="true"
      :tableData="tableData"
      @refresh="getDistributorList"
      @add="addDistributor"
    >
      <template #formItem>
        <el-form-item :label="t('permission.distributors.name')"
          ><el-input v-model="formData.name"
        /></el-form-item>
        <el-form-item :label="t('permission.distributors.enName')"
          ><el-input v-model="formData.enName"
        /></el-form-item>
        <el-form-item>
          <el-button type="success" @click="handleAdd">{{
            t("status.add")
          }}</el-button></el-form-item
        >
      </template>
      <template #columns>
        <el-table-column
          prop="name"
          :label="t('permission.distributors.name')"
        />
        <el-table-column
          prop="enName"
          :label="t('permission.distributors.enName')"
        />
        <el-table-column
          prop="lineTypeName"
          :label="t('permission.distributors.lineTypeName')"
        />
        <el-table-column
          prop="remark"
          :label="t('permission.distributors.remark')"
        />
        <el-table-column
          prop="sort"
          :label="t('permission.distributors.sort')"
        />

        <el-table-column :label="t('permission.distributors.operate')">
          <template #default="{ row }">
            <el-button type="primary" @click="handleEdit(row)">{{
              t("status.edit")
            }}</el-button>
            <el-button type="danger" @click="handleDel(row)">{{
              t("status.del")
            }}</el-button>
          </template>
        </el-table-column>
      </template>
    </Table>

    <Dialog :dialog="dialog" @confirm="submitEdit">
      <el-form ref="ruleForm" :model="editFormData" :rules="rules">
        <el-form-item
          v-if="dialog.title == '修改信息'"
          :label="t('permission.distributors.name')"
          prop="name"
        >
          <el-input v-model="editFormData.name" disabled />
        </el-form-item>
        <el-form-item
          v-else
          :label="t('permission.distributors.name')"
          prop="name"
        >
          <el-select v-model="editFormData.name">
            <el-option
              v-for="item in nameOption"
              :key="item"
              :label="item"
              :value="item"
            />
          </el-select>
        </el-form-item>

        <el-form-item
          :label="t('permission.distributors.lineType')"
          prop="lineTypeName"
        >
          <el-select v-model="editFormData.lineType">
            <el-option
              v-for="item in lineTypeOption"
              :key="item.id"
              :label="item.name"
              :value="item.id"
            />
          </el-select>
        </el-form-item>
        <el-form-item
          :label="t('permission.distributors.lineTypeName')"
          prop="lineTypeName"
        >
          <el-input v-model="editFormData.lineTypeName" />
        </el-form-item>
        <el-form-item :label="t('permission.distributors.sort')">
          <el-input v-model="editFormData.sort" />
        </el-form-item>
        <el-form-item
          :label="t('permission.distributors.remark')"
          prop="remark"
        >
          <el-input v-model="editFormData.remark" />
        </el-form-item>
      </el-form>
    </Dialog>
  </div>
</template>

<script setup>
import { onMounted, ref, reactive } from "vue";
import Table from "@/components/table/index.vue";
import { useI18n } from "vue-i18n";
import Dialog from "@/components/dialog/index.vue";
import {
  selectDistributor,
  deleteDistributor,
  updateDistributor,
  selectDistributorNameFromStreamLine
} from "@/api/permission/distributors";
import { ElMessage, ElMessageBox } from "element-plus";
import { getFourLevelResourceList } from "@/api/permission/resource";

const { t } = useI18n();
//表格和条件查询表单的字段定义
const page = reactive({
  page: 1,
  length: 50,
  total: 0
});
const pageSizes = ref([50, 60, 70, 100]);
const tableData = ref([]);
const formData = ref({ name: "", enName: "" });

//获取经销商列表
const getDistributorList = () => {
  selectDistributor().then(res => {
    tableData.value = res.data;
    // page.total = res.data.totalCount;
  });
};
//删除经销商
const handleDel = () => {
  ElMessageBox.confirm(t("permission.distributors.delReg"), "Warning", {
    confirmButtonText: t("status.confirm"),
    cancelButtonText: t("status.cancle"),
    type: "warning"
  }).then(() => {
    deleteDistributor().then(res => {
      if (res.success) {
        ElMessage.success(t("status.pureSuccess"));
      }
    });
  });
};
//修改经销商
const dialog = reactive({
  show: false,
  title: "修改信息",
  width: "50%"
});
const editFormData = ref({});

const rowData = ref({});
const handleEdit = async row => {
  await getFourLevelResource();
  dialog.show = true;
  rowData.value = row;
  editFormData.value = row;
};

const lineTypeOption = ref([]);
//查询所能修改的四级资源
const getFourLevelResource = () => {
  getFourLevelResourceList().then(res => {
    if (res.success) {
      lineTypeOption.value = res.data;
    }
  });
};
const submitEdit = () => {
  updateDistributor(editFormData.value).then(res => {
    if (res.success) {
      ElMessage.success(t("status.pureSuccess"));
      dialog.show = false;
    }
  });
};

const nameOption = ref([]);
//新增经销商
const handleAdd = () => {
  dialog.show = true;
  dialog.title = "新增经销商";
  selectDistributorNameFromStreamLine().then(res => {
    if (res.success) {
      // res.data.forEach(item => {
      //   return {

      //   }
      // })
      nameOption.value = res.data;
    }
  });
};

onMounted(() => {
  getDistributorList();
});
</script>

<style lang="scss" scoped></style>
