<template>
  <div>
    <Table
      v-model:formData="formData"
      :page="page"
      :showIndex="true"
      :showPage="false"
      :tableData="tableData"
      @refresh="getLevelFourList"
      @add="addUser"
    >
      <template #formItem>
        <el-form-item>
          <el-button type="warning" @click="handlePull()">{{
            t("status.pull")
          }}</el-button></el-form-item
        >
        <!-- <el-form-item>
          <el-button type="success" @click="handleAdd()">{{
            t("status.add")
          }}</el-button></el-form-item
        > -->
      </template>
      <template #columns>
        <!-- <el-table-column prop="name" label="名称" /> -->
        <el-table-column prop="name" :label="t('permission.levelFour.name')" />
        <el-table-column
          prop="fromK3"
          :label="t('permission.levelFour.fromK3')"
        >
          <template #default="{ row }">
            <span v-if="row.fromK3">{{ t("permission.levelFour.k3") }}</span>
            <span v-if="!row.fromK3">{{
              t("permission.levelFour.system")
            }}</span>
          </template>
        </el-table-column>
        <el-table-column
          prop="remark"
          :label="t('permission.levelFour.remark')"
        />
        <el-table-column
          prop="createTime"
          :label="t('permission.levelFour.createTime')"
        />
        <!-- <el-table-column :label="t('status.operate')">
          <template #default="{ row }">
            <el-text type="primary" @click="handleEdit(row, 'role')">{{
              t("status.edit")
            }}</el-text>
            <el-text type="primary" @click="handleReset(row, 'pass')">{{
              t("status.reset")
            }}</el-text>
            <el-text type="primary" @click="handleDel(row)">{{
              t("status.del")
            }}</el-text></template
          >
        </el-table-column> -->
      </template>
    </Table>
  </div>
</template>

<script setup>
import Table from "@/components/table/index.vue";
import { reactive, ref, onMounted } from "vue";
import { useI18n } from "vue-i18n";
import {
  getFourLevelResourceList,
  pullFourResourceFromsStreamlinr
} from "@/api/permission/resource";

const { t } = useI18n();

//获取四级资源
const tableData = ref([]);
const getLevelFourList = () => {
  getFourLevelResourceList().then(res => {
    if (res.success) {
      tableData.value = res.data;
    }
  });
};
//拉取资源
const handlePull = () => {
  pullFourResourceFromsStreamlinr();
  getLevelFourList();
};

onMounted(() => {
  getLevelFourList();
});
</script>

<style lang="scss" scoped></style>
